{"version":3,"file":"static/js/259.a5820dac.chunk.js","mappings":"iMAcA,mBAAkC,IAAlBA,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzB,MAAMG,EAAUC,EAAAA,EAAMC,OAAO,CAC3BC,QAASC,EAAAA,SACTR,SAAOS,EAAAA,EAAAA,GAAA,CACLC,eAAeC,EAAAA,EAAAA,kBAAmB,UAAUC,QAAOD,EAAAA,EAAAA,mBAAoB,IACpEX,KAkCP,OA/BAI,EAAQS,aAAaC,SAASC,KAC5BD,GAAYA,IACZE,IACE,MAAMC,EAAgBD,EAAMF,SAE1B,GACO,MADCG,EAAcC,OAElBC,OAAOC,SAASC,SAAW,iBAUb,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAJU,MAAzBX,EAAcC,UAChBW,EAAAA,EAAAA,cACAV,OAAOC,SAASU,KAAO,YAErBb,IACFc,EAAAA,EAAaf,MAAM,CACjBgB,QAAS,QACTC,aACe,OAAbhB,QAAa,IAAbA,GAAmB,QAANK,EAAbL,EAAeiB,YAAI,IAAAZ,GAAS,QAATC,EAAnBD,EAAqBU,eAAO,IAAAT,GAAK,QAALC,EAA5BD,EAA+B,UAAE,IAAAC,GAAU,QAAVC,EAAjCD,EAAmCW,gBAAQ,IAAAV,GAAK,QAALC,EAA3CD,EAA8C,UAAE,IAAAC,OAAnC,EAAbA,EAAkDM,UACT,kBAApB,OAAbf,QAAa,IAAbA,GAAmB,QAANU,EAAbV,EAAeiB,YAAI,IAAAP,OAAN,EAAbA,EAAqBK,WAAqC,OAAbf,QAAa,IAAbA,GAAmB,QAANW,EAAbX,EAAeiB,YAAI,IAAAN,OAAN,EAAbA,EAAqBI,UAC1E,uBACFI,SAAU,EACVC,SAAU,IAGd,MAAMrB,CAAK,IAGRZ,CACR,C,mHCpDM,MAAMkC,EAAeJ,IAC1B,MAAMK,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,QAASP,IAClBQ,EAAAA,EAAAA,SAAO,CAAE,eAAgB,sCAC7BC,KAAK,UAAWJ,GAChBK,MAAKC,GAAOA,IACZC,OAAM,IAAM,MAAK,EAETC,EAAqBb,IAAQQ,EAAAA,EAAAA,WAASC,KAAK,gBAAiBT,GAC5Dc,EAAkBC,IAAUP,EAAAA,EAAAA,WAASQ,OAAO,iBAADtC,OAAwB,OAANqC,QAAM,IAANA,OAAM,EAANA,EAAQE,I","sources":["services/main-client.js","services/uploads.js"],"sourcesContent":["import axios from 'axios';\r\n// import Promise from 'bluebird';\r\nimport { notification } from 'antd';\r\nimport { getAccessToken, emptyState } from '../configs/local-storage';\r\nimport { API_ROOT } from '../configs/env-vars';\r\n//\r\n// Promise.config({\r\n//   cancellation: true,\r\n// });\r\n\r\n// overwrite native Promise implementation with Bluebird's\r\n// window.Promise = Promise;\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (headers = {}) => {\r\n  const service = axios.create({\r\n    baseURL: API_ROOT, // url of the api\r\n    headers: {\r\n      Authorization: getAccessToken() ? 'Bearer '.concat(getAccessToken()) : '',\r\n      ...headers,\r\n    },\r\n  });\r\n  service.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n      const errorResponse = error.response;\r\n      if (process.env.NODE_ENV === 'production') {\r\n        switch (errorResponse.status) {\r\n          case 403:\r\n            window.location.pathname = '/not-permitted';\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      if (errorResponse.status === 401) {\r\n        emptyState();\r\n        window.location.href = '/sign-in';\r\n      }\r\n      if (errorResponse) {\r\n        notification.error({\r\n          message: 'Error',\r\n          description:\r\n            errorResponse?.data?.message?.[0]?.messages?.[0]?.message ||\r\n            (typeof errorResponse?.data?.message === 'string' && errorResponse?.data?.message) ||\r\n            'Something went wrong',\r\n          maxCount: 1,\r\n          duration: 0,\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  );\r\n  return service;\r\n};\r\n","import client from './main-client';\r\n\r\nexport const addUploadApi = data => {\r\n  const formData = new FormData();\r\n  formData.append('files', data);\r\n  return client({ 'Content-type': 'application/x-www-form-urlencoded' })\r\n    .post('/upload', formData)\r\n    .then(res => res)\r\n    .catch(() => null);\r\n};\r\nexport const addBase64UploadApi = data => client().post('/file-storage', data);\r\nexport const deleteUploadApi = params => client().delete(`/upload/files/${params?.id}`);\r\n"],"names":["headers","arguments","length","undefined","service","axios","create","baseURL","API_ROOT","_objectSpread","Authorization","getAccessToken","concat","interceptors","response","use","error","errorResponse","status","window","location","pathname","_errorResponse$data","_errorResponse$data$m","_errorResponse$data$m2","_errorResponse$data$m3","_errorResponse$data$m4","_errorResponse$data2","_errorResponse$data3","emptyState","href","notification","message","description","data","messages","maxCount","duration","addUploadApi","formData","FormData","append","client","post","then","res","catch","addBase64UploadApi","deleteUploadApi","params","delete","id"],"sourceRoot":""}