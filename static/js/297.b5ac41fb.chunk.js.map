{"version":3,"file":"static/js/297.b5ac41fb.chunk.js","mappings":"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","sources":["components/molecules/dashbaord-charts.js","services/apis/marz.js","services/main-client.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport { Col, RangePicker, Row, Title, Button } from 'components/atoms/index';\r\nimport { getDataWaterDischarge, getDataWaterIntake, getPermits } from 'services/apis/marz';\r\nimport { Tooltip, CartesianGrid, Legend, Line, LineChart, XAxis, YAxis } from 'recharts';\r\nimport chartOfflineData from '../../data/chart-data.json';\r\n\r\nconst CustomLineTooltip = ({ active, payload, label }) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div\r\n        className='custom-tooltip'\r\n        style={{ backgroundColor: '#fff', border: '1px solid #ccc', padding: '10px' }}\r\n      >\r\n        <p className='label'>{`Name: ${label}`}</p>\r\n        {payload.map((entry, index) => (\r\n          <p key={index} style={{ color: entry.color }}>\r\n            {`${entry.name}: ${entry.value} k m³/yr`}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst DashboardCharts = ({\r\n  engBMO,\r\n  setCharLoading,\r\n  bmo,\r\n  exportData,\r\n  engBMOValues,\r\n  disabledDate,\r\n  notConnected,\r\n}) => {\r\n  const [rangeYears, setRangeYears] = useState([2022, 2023, 2024]);\r\n  const [chartData, setChartData] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (bmo.length && !notConnected) {\r\n      setCharLoading(true);\r\n      const allDone = { permits: false, dataWaterIntake: false, dataWaterDischarge: false };\r\n      Promise.all(\r\n        rangeYears.reduce(\r\n          (acc, yr) => [\r\n            ...acc,\r\n            ...bmo.reduce((ac, bm) => [...ac, getPermits({ bmoid: bm.internal_id, year: yr })], []),\r\n          ],\r\n          []\r\n        )\r\n      )\r\n        .then(data => {\r\n          const convertData = data\r\n            .map(el => el?.data)\r\n            .flat()\r\n            .reduce(\r\n              (acc, value) => ({\r\n                ...acc,\r\n                [value.yearA]: {\r\n                  ...(acc?.[value.yearA] ? acc[value.yearA] : {}),\r\n                  [engBMO[value.basinName]]: acc?.[value.yearA]?.[engBMO[value.basinName]]\r\n                    ? acc[value.yearA][engBMO[value.basinName]] + 1\r\n                    : 1,\r\n                },\r\n              }),\r\n              {}\r\n            );\r\n          setChartData(prev => ({\r\n            ...prev,\r\n            ...Object.entries(convertData).reduce(\r\n              (acc, [key, value]) => ({\r\n                ...acc,\r\n                [key]: { ...(prev?.[key] ? prev[key] : {}), permitsQuantity: value },\r\n              }),\r\n              {}\r\n            ),\r\n          }));\r\n          allDone.permits = true;\r\n          if (Object.values(allDone).every(el => el === true)) {\r\n            setCharLoading(false);\r\n          }\r\n        })\r\n        .catch(e => {\r\n          // eslint-disable-next-line no-console\r\n          console.error(e);\r\n        });\r\n      Promise.all(\r\n        rangeYears.reduce(\r\n          (acc, yr) => [\r\n            ...acc,\r\n            ...bmo.reduce(\r\n              (ac, bm) => [...ac, getDataWaterIntake({ bmoid: bm.internal_id, year: yr })],\r\n              []\r\n            ),\r\n          ],\r\n          []\r\n        )\r\n      )\r\n        .then(data => {\r\n          const convertData = data\r\n            .map(el => el?.data)\r\n            .flat()\r\n            .reduce(\r\n              (acc, value) => ({\r\n                ...acc,\r\n                [value.yearA]: {\r\n                  ...(acc?.[value.yearA] ? acc[value.yearA] : {}),\r\n                  [engBMO[value.basinName]]:\r\n                    (acc?.[value.yearA]?.[engBMO[value.basinName]]\r\n                      ? acc[value.yearA][engBMO[value.basinName]]\r\n                      : 0) + value.totalQuantity,\r\n                },\r\n              }),\r\n              {}\r\n            );\r\n          setChartData(prev => ({\r\n            ...prev,\r\n            ...Object.entries(convertData).reduce(\r\n              (acc, [key, value]) => ({\r\n                ...acc,\r\n                [key]: { ...(prev?.[key] ? prev[key] : {}), dataWaterIntakeQuantity: value },\r\n              }),\r\n              {}\r\n            ),\r\n          }));\r\n          allDone.dataWaterIntake = true;\r\n          if (Object.values(allDone).every(el => el === true)) {\r\n            setCharLoading(false);\r\n          }\r\n        })\r\n        .catch(e => {\r\n          // eslint-disable-next-line no-console\r\n          console.error(e);\r\n        });\r\n      Promise.all(\r\n        rangeYears.reduce(\r\n          (acc, yr) => [\r\n            ...acc,\r\n            ...bmo.reduce(\r\n              (ac, bm) => [...ac, getDataWaterDischarge({ bmoid: bm.internal_id, year: yr })],\r\n              []\r\n            ),\r\n          ],\r\n          []\r\n        )\r\n      )\r\n        .then(data => {\r\n          const convertData = data\r\n            .map(el => el?.data)\r\n            .flat()\r\n            .reduce(\r\n              (acc, value) => ({\r\n                ...acc,\r\n                [value.yearA]: {\r\n                  ...(acc?.[value.yearA] ? acc[value.yearA] : {}),\r\n                  [engBMO[value.basinName]]:\r\n                    (acc?.[value.yearA]?.[engBMO[value.basinName]]\r\n                      ? acc[value.yearA][engBMO[value.basinName]]\r\n                      : 0) + value.totalQuantity,\r\n                },\r\n              }),\r\n              {}\r\n            );\r\n          setChartData(prev => ({\r\n            ...prev,\r\n            ...Object.entries(convertData).reduce(\r\n              (acc, [key, value]) => ({\r\n                ...acc,\r\n                [key]: { ...(prev?.[key] ? prev[key] : {}), dataDataWaterDischarge: value },\r\n              }),\r\n              {}\r\n            ),\r\n          }));\r\n          allDone.dataWaterDischarge = true;\r\n          if (Object.values(allDone).every(el => el === true)) {\r\n            setCharLoading(false);\r\n          }\r\n        })\r\n        .catch(e => {\r\n          // eslint-disable-next-line no-console\r\n          console.error(e);\r\n        });\r\n    } else if (notConnected && bmo.length) {\r\n      setChartData(rangeYears.reduce((acc, el) => ({ ...acc, [el]: chartOfflineData[el] }), {}));\r\n    }\r\n  }, [bmo, rangeYears, notConnected]);\r\n\r\n  return (\r\n    <>\r\n      <RangePicker\r\n        picker='year'\r\n        disabledDate={disabledDate}\r\n        defaultValue={[rangeYears[0], rangeYears[rangeYears.length - 1]].map(el =>\r\n          moment(el, 'YYYY')\r\n        )}\r\n        onChange={e => {\r\n          setRangeYears(\r\n            Array.from(\r\n              {\r\n                length:\r\n                  Number(moment(e[1]).format('YYYY')) - Number(moment(e[0]).format('YYYY')) + 1,\r\n              },\r\n              (_, i) => Number(moment(e[0]).format('YYYY')) + i\r\n            )\r\n          );\r\n          setChartData({});\r\n        }}\r\n        width='200px'\r\n        mb={10}\r\n      />\r\n      <Row gutter={[32, 32]}>\r\n        <Col span={24}>\r\n          <Title level={3}>Chart of BMOs Water Discharge Quantity</Title>\r\n          <LineChart\r\n            width={730}\r\n            height={250}\r\n            data={Object.entries(chartData).map(([key, value]) => ({\r\n              name: key,\r\n              ...value.dataDataWaterDischarge,\r\n            }))}\r\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <Tooltip content={<CustomLineTooltip />} />\r\n            <Legend />\r\n            {[\r\n              { name: [0], color: 'black' },\r\n              { name: engBMOValues[1], color: 'yellow' },\r\n              { name: engBMOValues[2], color: 'red' },\r\n              { name: engBMOValues[3], color: 'blue' },\r\n              { name: engBMOValues[4], color: 'pink' },\r\n              { name: engBMOValues[5], color: 'orange' },\r\n            ].map(el => (\r\n              <Line type='monotone' dataKey={el.name} key={el.name} stroke={el.color} />\r\n            ))}\r\n          </LineChart>\r\n        </Col>\r\n        <Col span={24}>\r\n          <Title level={3}>Chart of BMOs Water Intake Quantity</Title>\r\n          <LineChart\r\n            width={730}\r\n            height={250}\r\n            data={Object.entries(chartData).map(([key, value]) => ({\r\n              name: key,\r\n              ...value.dataWaterIntakeQuantity,\r\n            }))}\r\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <Tooltip content={<CustomLineTooltip />} />\r\n            <Legend />\r\n            {[\r\n              { name: engBMOValues[0], color: 'black' },\r\n              { name: engBMOValues[1], color: 'yellow' },\r\n              { name: engBMOValues[2], color: 'red' },\r\n              { name: engBMOValues[3], color: 'blue' },\r\n              { name: engBMOValues[4], color: 'pink' },\r\n              { name: engBMOValues[5], color: 'orange' },\r\n            ].map(el => (\r\n              <Line type='monotone' dataKey={el.name} key={el.name} stroke={el.color} />\r\n            ))}\r\n          </LineChart>\r\n        </Col>\r\n        <Col span={24}>\r\n          <Title level={3}>Chart of BMOs Water Permits Quantity</Title>\r\n          <LineChart\r\n            width={730}\r\n            height={250}\r\n            data={Object.entries(chartData).map(([key, value]) => ({\r\n              name: key,\r\n              ...value.permitsQuantity,\r\n            }))}\r\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            {[\r\n              { name: engBMOValues[0], color: 'black' },\r\n              { name: engBMOValues[1], color: 'yellow' },\r\n              { name: engBMOValues[2], color: 'red' },\r\n              { name: engBMOValues[3], color: 'blue' },\r\n              { name: engBMOValues[4], color: 'pink' },\r\n              { name: engBMOValues[5], color: 'orange' },\r\n            ].map(el => (\r\n              <Line type='monotone' dataKey={el.name} key={el.name} stroke={el.color} />\r\n            ))}\r\n          </LineChart>\r\n        </Col>\r\n        <Col span={24}>\r\n          <Button onClick={() => exportData(chartData, 'chart')} margin={'32px 0 0 0'}>\r\n            Export Data\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardCharts;\r\n","import client from '../main-client';\r\n\r\nexport const getMarz = data => client().get('/Marz', data);\r\nexport const getBmo = data => client().get('/BMO', data);\r\nexport const getPermits = ({ bmoid, year, ...data }) =>\r\n  client().get(`/main/${bmoid}/${year}`, data);\r\nexport const getIntakeDischargePoints = ({ bmoid, ...data }) =>\r\n  client().get(`/intake-discharge-points/${bmoid}`, data);\r\nexport const getDataWaterIntake = ({ bmoid, year, ...data }) =>\r\n  client().get(`/datawaterintake/${bmoid}/${year}`, data);\r\nexport const getDataWaterDischarge = ({ bmoid, year, ...data }) =>\r\n  client().get(`/datawaterdischarge/${bmoid}/${year}`, data);\r\n","import axios from 'axios';\r\n// import Promise from 'bluebird';\r\nimport { notification } from 'antd';\r\nimport { getAccessToken, emptyState } from '../configs/local-storage';\r\nimport { API_ROOT } from '../configs/env-vars';\r\n//\r\n// Promise.config({\r\n//   cancellation: true,\r\n// });\r\n\r\n// overwrite native Promise implementation with Bluebird's\r\n// window.Promise = Promise;\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (headers = {}) => {\r\n  const service = axios.create({\r\n    baseURL: API_ROOT, // url of the api\r\n    headers: {\r\n      Authorization: getAccessToken() ? 'Bearer '.concat(getAccessToken()) : '',\r\n      ...headers,\r\n    },\r\n  });\r\n  service.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n      const errorResponse = error.response;\r\n      if (process.env.NODE_ENV === 'production') {\r\n        switch (errorResponse.status) {\r\n          case 403:\r\n            window.location.pathname = '/not-permitted';\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      if (errorResponse.status === 401) {\r\n        emptyState();\r\n        window.location.href = '/sign-in';\r\n      }\r\n      if (errorResponse) {\r\n        notification.error({\r\n          message: 'Error',\r\n          description:\r\n            errorResponse?.data?.message?.[0]?.messages?.[0]?.message ||\r\n            (typeof errorResponse?.data?.message === 'string' && errorResponse?.data?.message) ||\r\n            'Something went wrong',\r\n          maxCount: 1,\r\n          duration: 0,\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  );\r\n  return service;\r\n};\r\n"],"names":["CustomLineTooltip","_ref","active","payload","label","length","_jsxs","className","style","backgroundColor","border","padding","children","_jsx","concat","map","entry","index","color","name","value","_ref2","engBMO","setCharLoading","bmo","exportData","engBMOValues","disabledDate","notConnected","rangeYears","setRangeYears","useState","chartData","setChartData","useEffect","allDone","permits","dataWaterIntake","dataWaterDischarge","Promise","all","reduce","acc","yr","ac","bm","getPermits","bmoid","internal_id","year","then","data","convertData","el","flat","_acc$value$yearA","_objectSpread","yearA","basinName","prev","Object","entries","_ref3","key","permitsQuantity","values","every","catch","e","console","error","getDataWaterIntake","_acc$value$yearA2","totalQuantity","_ref4","dataWaterIntakeQuantity","getDataWaterDischarge","_acc$value$yearA3","_ref5","dataDataWaterDischarge","chartOfflineData","_Fragment","RangePicker","picker","defaultValue","moment","onChange","Array","from","Number","format","_","i","width","mb","Row","gutter","Col","span","Title","level","LineChart","height","_ref6","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","content","Legend","Line","type","stroke","_ref7","_ref8","Button","onClick","getMarz","client","get","getBmo","_objectWithoutProperties","_excluded","getIntakeDischargePoints","_excluded2","_excluded3","_excluded4","headers","arguments","undefined","service","axios","create","baseURL","API_ROOT","Authorization","getAccessToken","interceptors","response","use","errorResponse","status","window","location","pathname","_errorResponse$data","_errorResponse$data$m","_errorResponse$data$m2","_errorResponse$data$m3","_errorResponse$data$m4","_errorResponse$data2","_errorResponse$data3","emptyState","href","notification","message","description","messages","maxCount","duration"],"sourceRoot":""}