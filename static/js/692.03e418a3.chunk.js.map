{"version":3,"file":"static/js/692.03e418a3.chunk.js","mappings":"iJAEA,MAyCA,EAzCmBA,CAACC,EAAUC,EAAWC,KACvC,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,KAC1BG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAwB7BK,EAAsB,WACrBR,GACHE,EAF8BO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAIlC,EAOA,MAAO,CAACL,EAAMH,EAjCQ,SAACW,GAAiC,IAAzBC,EAAQJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OACxCD,GAAoB,GAChBV,GACFA,EAASc,GACNE,MAAKC,IACJP,IACAH,GAAW,OAAHU,QAAG,IAAHA,OAAG,EAAHA,EAAKX,OAAQ,IACrBS,GAAY,OAAHE,QAAG,IAAHA,OAAG,EAAHA,EAAKX,OAAQ,GAAG,IAE1BY,OAAM,KACLR,GAAqB,IAGvBT,GACFA,EAAUa,GACPE,MAAKC,IACJR,GAAY,OAAHQ,QAAG,IAAHA,OAAG,EAAHA,EAAKX,OAAQ,EAAE,IAEzBY,OAAM,QAEb,EAasCV,EALbW,KACvBZ,EAAQ,IACRE,EAAS,EAAE,EAGiD,C","sources":["utils/hooks/useApiCall.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst useApiCall = (callFunc, countFunc, withoutLoading) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [count, setCount] = useState(null);\r\n\r\n  const handleApiCall = (params, callback = () => {}) => {\r\n    handleLoadingChange(true);\r\n    if (callFunc) {\r\n      callFunc(params)\r\n        .then(res => {\r\n          handleLoadingChange();\r\n          setData(res?.data || []);\r\n          callback(res?.data || []);\r\n        })\r\n        .catch(() => {\r\n          handleLoadingChange();\r\n        });\r\n    }\r\n    if (countFunc) {\r\n      countFunc(params)\r\n        .then(res => {\r\n          setCount(res?.data || 0);\r\n        })\r\n        .catch(() => {});\r\n    }\r\n  };\r\n\r\n  const handleLoadingChange = (value = false) => {\r\n    if (!withoutLoading) {\r\n      setLoading(value);\r\n    }\r\n  };\r\n\r\n  const setDefaultValues = () => {\r\n    setData([]);\r\n    setCount(0);\r\n  };\r\n\r\n  return [data, loading, handleApiCall, count, setDefaultValues];\r\n};\r\n\r\nexport default useApiCall;\r\n"],"names":["useApiCall","callFunc","countFunc","withoutLoading","loading","setLoading","useState","data","setData","count","setCount","handleLoadingChange","arguments","length","undefined","params","callback","then","res","catch","setDefaultValues"],"sourceRoot":""}