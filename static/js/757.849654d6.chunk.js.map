{"version":3,"file":"static/js/757.849654d6.chunk.js","mappings":"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","sources":["components/organisms/guest/guest-dashboard.js","services/apis/marz.js","services/main-client.js","utils/hooks/useApiCall.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport React, { Suspense, useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, GeoJSON, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport {\r\n  getBmo,\r\n  getDataWaterDischarge,\r\n  getDataWaterintake,\r\n  getIntakeDischargePoints,\r\n  getMarz,\r\n  getPermits,\r\n} from 'services/apis/marz';\r\nimport useApiCall from 'utils/hooks/useApiCall';\r\nimport { Typography } from 'antd';\r\nimport { Spin } from 'antd/lib/index';\r\nimport { centroid } from 'turf/index';\r\nimport { Col, DatePicker, Paragraph, RangePicker, Row } from 'components/atoms/index';\r\nimport Button from 'components/atoms/Button/index';\r\nimport {\r\n  Pie,\r\n  PieChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport moment from 'moment';\r\nimport geojsonData from '../../../assets/am.json';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst totalQuantit = data => {\r\n  return data.reduce((acc, item) => acc + item.totalQuantity, 0);\r\n};\r\nconst listOfNames = data => {\r\n  return [...new Set(data.map(el => el.waterSource))];\r\n};\r\nconst totalKeyCount = (data, key, name) => {\r\n  return data.filter(el => el?.[key] === name).length;\r\n};\r\n\r\nconst engMarz = {\r\n  Արագածոտն: 'Aragatsotn',\r\n  Արարատ: 'Ararat',\r\n  Արմավիր: 'Armavir',\r\n  Գեղարքունիք: 'Gegharkunik',\r\n  Երևան: 'Erevan',\r\n  Լոռի: 'Lori',\r\n  Կոտայք: 'Kotayk',\r\n  Շիրակ: 'Shirak',\r\n  Սյունիք: 'Syunik',\r\n  'Վայոց ձոր': 'Vayots Dzor',\r\n  Տավուշ: 'Tavush',\r\n};\r\n\r\nconst CustomTooltip = ({ payload, continuem = true }) => {\r\n  return (\r\n    <div>\r\n      <div className='ant-popover-arrow' />\r\n      <div>\r\n        <b>{payload?.[0]?.payload?.name}</b>\r\n        <span>\r\n          <p className='desc'>\r\n            <small>{payload?.[0]?.payload?.value}</small>\r\n            {continuem && ' հազ. խոր.մ/տարի`'}\r\n          </p>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProvinceLabels = React.memo(({ data, marzData }) => {\r\n  const map = useMap();\r\n  const markers = React.useRef([]);\r\n\r\n  useEffect(() => {\r\n    data.features.forEach(feature => {\r\n      const center = centroid(feature);\r\n      const [lng, lat] = center.geometry.coordinates;\r\n\r\n      const marker = L.marker([lat, lng], {\r\n        icon: L.divIcon({\r\n          className: 'province-label',\r\n          html: `<div style=\"font-size:12px; color:blue; white-space: nowrap;\">${\r\n            feature.properties.name\r\n          }</div>\r\n        ${\r\n          marzData?.[feature.properties.name]\r\n            ? `<div style=\"font-size:12px; color:red; white-space: nowrap;\"> ${Math.round(\r\n                marzData?.[feature.properties.name].dataWaterDischargeQuanitity\r\n              )} հազ. խոր.մ/տարի</div>\r\n              <div style=\"font-size:12px; color:green; white-space: nowrap;\"> ${Math.round(\r\n                marzData?.[feature.properties.name].dataWaterintakeQuanitity\r\n              )} հազ. խոր.մ/տարի</div>\r\n               <div style=\"font-size:12px; color:black; white-space: nowrap;\"> ${Math.round(\r\n                 marzData?.[feature.properties.name].dataResourcesWaterSourcesLength\r\n               )}</div>\r\n              `\r\n            : ''\r\n        }`,\r\n        }),\r\n      }).addTo(map);\r\n\r\n      markers.current.push(marker);\r\n    });\r\n    return () => {\r\n      markers.current.forEach(marker => map.removeLayer(marker));\r\n      markers.current = [];\r\n    };\r\n  }, [data, marzData, map]);\r\n\r\n  return null;\r\n});\r\n\r\nconst GuestDashboard = () => {\r\n  const [marz, , marzCall] = useApiCall(getMarz);\r\n  const [, , permitsCall] = useApiCall(getPermits);\r\n  const [, , intakeDischargePointsCall] = useApiCall(getIntakeDischargePoints);\r\n  const [, , dataWaterintakeCall] = useApiCall(getDataWaterintake);\r\n  const [, , dataWaterDischargeCall] = useApiCall(getDataWaterDischarge);\r\n  const [bmo, , bmoCall] = useApiCall(getBmo);\r\n  const [seperetedDataPerBMO, setSeperetedDataPerBMO] = useState({});\r\n  const [globaledBmoData, setGlobaledBmoData] = useState({});\r\n  const [sepetetedDataPerMarz, setSepetetedDataPerMarz] = useState({});\r\n  const [year, setYear] = useState('2024');\r\n  const [rangeYears, setRangeYears] = useState([2022, 2023, 2024]);\r\n  const [chartData, setChartData] = useState({});\r\n  const [charLoading, setCharLoading] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    bmoCall();\r\n    marzCall();\r\n\r\n    return () => {\r\n      const m = L.DomUtil.get('map');\r\n      if (m) {\r\n        m._leaflet_id = null;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (bmo.length) {\r\n      setCharLoading(true);\r\n      const allDone = { permits: false, dataWaterintake: false, dataWaterDischarge: false };\r\n      Promise.all(\r\n        rangeYears.reduce(\r\n          (acc, yr) => [\r\n            ...acc,\r\n            ...bmo.reduce((ac, bm) => [...ac, getPermits({ bmoid: bm.internal_id, year: yr })], []),\r\n          ],\r\n          []\r\n        )\r\n      )\r\n        .then(data => {\r\n          const converData = data\r\n            .map(el => el?.data)\r\n            .flat()\r\n            .reduce(\r\n              (acc, value) => ({\r\n                ...acc,\r\n                [value.yearA]: {\r\n                  ...(acc?.[value.yearA] ? acc[value.yearA] : {}),\r\n                  [value.basinName]: acc?.[value.yearA]?.[value.basinName]\r\n                    ? acc[value.yearA][value.basinName] + 1\r\n                    : 1,\r\n                },\r\n              }),\r\n              {}\r\n            );\r\n          setChartData(prev => ({\r\n            ...prev,\r\n            ...Object.entries(converData).reduce(\r\n              (acc, [key, value]) => ({\r\n                ...acc,\r\n                [key]: { ...(prev?.[key] ? prev[key] : {}), permitsQuantity: value },\r\n              }),\r\n              {}\r\n            ),\r\n          }));\r\n          allDone.permits = true;\r\n          if (Object.values(allDone).every(el => el === true)) {\r\n            setCharLoading(false);\r\n          }\r\n        })\r\n        .catch(e => {\r\n          // eslint-disable-next-line no-console\r\n          console.error(e);\r\n        });\r\n      Promise.all(\r\n        rangeYears.reduce(\r\n          (acc, yr) => [\r\n            ...acc,\r\n            ...bmo.reduce(\r\n              (ac, bm) => [...ac, getDataWaterintake({ bmoid: bm.internal_id, year: yr })],\r\n              []\r\n            ),\r\n          ],\r\n          []\r\n        )\r\n      )\r\n        .then(data => {\r\n          const converData = data\r\n            .map(el => el?.data)\r\n            .flat()\r\n            .reduce(\r\n              (acc, value) => ({\r\n                ...acc,\r\n                [value.yearA]: {\r\n                  ...(acc?.[value.yearA] ? acc[value.yearA] : {}),\r\n                  [value.basinName]:\r\n                    (acc?.[value.yearA]?.[value.basinName]\r\n                      ? acc[value.yearA][value.basinName]\r\n                      : 0) + value.totalQuantity,\r\n                },\r\n              }),\r\n              {}\r\n            );\r\n          setChartData(prev => ({\r\n            ...prev,\r\n            ...Object.entries(converData).reduce(\r\n              (acc, [key, value]) => ({\r\n                ...acc,\r\n                [key]: { ...(prev?.[key] ? prev[key] : {}), dataWaterintakeQuanitity: value },\r\n              }),\r\n              {}\r\n            ),\r\n          }));\r\n          allDone.dataWaterintake = true;\r\n          if (Object.values(allDone).every(el => el === true)) {\r\n            setCharLoading(false);\r\n          }\r\n        })\r\n        .catch(e => {\r\n          // eslint-disable-next-line no-console\r\n          console.error(e);\r\n        });\r\n      Promise.all(\r\n        rangeYears.reduce(\r\n          (acc, yr) => [\r\n            ...acc,\r\n            ...bmo.reduce(\r\n              (ac, bm) => [...ac, getDataWaterDischarge({ bmoid: bm.internal_id, year: yr })],\r\n              []\r\n            ),\r\n          ],\r\n          []\r\n        )\r\n      )\r\n        .then(data => {\r\n          const converData = data\r\n            .map(el => el?.data)\r\n            .flat()\r\n            .reduce(\r\n              (acc, value) => ({\r\n                ...acc,\r\n                [value.yearA]: {\r\n                  ...(acc?.[value.yearA] ? acc[value.yearA] : {}),\r\n                  [value.basinName]:\r\n                    (acc?.[value.yearA]?.[value.basinName]\r\n                      ? acc[value.yearA][value.basinName]\r\n                      : 0) + value.totalQuantity,\r\n                },\r\n              }),\r\n              {}\r\n            );\r\n          setChartData(prev => ({\r\n            ...prev,\r\n            ...Object.entries(converData).reduce(\r\n              (acc, [key, value]) => ({\r\n                ...acc,\r\n                [key]: { ...(prev?.[key] ? prev[key] : {}), dataDataWaterDischarge: value },\r\n              }),\r\n              {}\r\n            ),\r\n          }));\r\n          allDone.dataWaterDischarge = true;\r\n          if (Object.values(allDone).every(el => el === true)) {\r\n            setCharLoading(false);\r\n          }\r\n        })\r\n        .catch(e => {\r\n          // eslint-disable-next-line no-console\r\n          console.error(e);\r\n        });\r\n    }\r\n  }, [bmo, rangeYears]);\r\n\r\n  useEffect(() => {\r\n    if (bmo?.length) {\r\n      for (let i = 0; i < bmo.length; i += 1) {\r\n        setLoading(true);\r\n        const allLoaded = {\r\n          permitsCall: false,\r\n          intakeDischargePointsCall: false,\r\n          dataWaterintakeCall: false,\r\n          dataWaterDischargeCall: false,\r\n        };\r\n        permitsCall({ bmoid: bmo[i].internal_id, year }, data => {\r\n          setSeperetedDataPerBMO(prev => ({\r\n            ...prev,\r\n            [bmo[i].name]: { ...(prev?.[bmo[i].name] || {}), permits: data },\r\n          }));\r\n          allLoaded.permitsCall = true;\r\n          if (Object.values(allLoaded).every(el => el === true)) {\r\n            setLoading(false);\r\n          } else {\r\n            setLoading(true);\r\n          }\r\n        });\r\n        intakeDischargePointsCall({ bmoid: bmo[i].internal_id }, data => {\r\n          setSeperetedDataPerBMO(prev => ({\r\n            ...prev,\r\n            [bmo[i].name]: { ...(prev?.[bmo[i].name] || {}), intakeDischargePoints: data },\r\n          }));\r\n          allLoaded.intakeDischargePointsCall = true;\r\n          if (Object.values(allLoaded).every(el => el === true)) {\r\n            setLoading(false);\r\n          } else {\r\n            setLoading(true);\r\n          }\r\n        });\r\n        dataWaterintakeCall({ bmoid: bmo[i].internal_id, year }, data => {\r\n          setSeperetedDataPerBMO(prev => ({\r\n            ...prev,\r\n            [bmo[i].name]: { ...(prev?.[bmo[i].name] || {}), dataWaterintake: data },\r\n          }));\r\n          allLoaded.dataWaterintakeCall = true;\r\n          if (Object.values(allLoaded).every(el => el === true)) {\r\n            setLoading(false);\r\n          } else {\r\n            setLoading(true);\r\n          }\r\n        });\r\n        dataWaterDischargeCall({ bmoid: bmo[i].internal_id, year }, data => {\r\n          setSeperetedDataPerBMO(prev => ({\r\n            ...prev,\r\n            [bmo[i].name]: { ...(prev?.[bmo[i].name] || {}), dataWaterDischarge: data },\r\n          }));\r\n          allLoaded.dataWaterDischargeCall = true;\r\n          if (Object.values(allLoaded).every(el => el === true)) {\r\n            setLoading(false);\r\n          } else {\r\n            setLoading(true);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [bmo, year]);\r\n\r\n  useEffect(() => {\r\n    const areAllFileed = Object.values(seperetedDataPerBMO)\r\n      .map(el => Object.keys(el).length === 4)\r\n      .every(val => val === true);\r\n    if (Object.keys(seperetedDataPerBMO).length === bmo.length && areAllFileed && bmo.length > 0) {\r\n      setGlobaledBmoData(\r\n        Object.entries(seperetedDataPerBMO).reduce(\r\n          (acc, [key, value]) => ({\r\n            ...acc,\r\n            [key]: {\r\n              dataWaterDischargeQuanitity: totalQuantit(value.dataWaterDischarge || []),\r\n              dataWaterintakeQuanitity: totalQuantit(value?.dataWaterintake || []),\r\n              dataResourcesWaterSources: listOfNames([\r\n                ...(value?.dataWaterDischarge || []),\r\n                ...(value?.dataWaterintake || []),\r\n              ]),\r\n              dataResourcesWaterSourcesLength: listOfNames([\r\n                ...(value.dataWaterDischarge || []),\r\n                ...(value.dataWaterintake || []),\r\n              ]).length,\r\n              TotalJrar: totalKeyCount(\r\n                value?.intakeDischargePoints || [],\r\n                'typeOfWaterUse',\r\n                'Ջրառ'\r\n              ),\r\n              TotalJrarHeracum: totalKeyCount(\r\n                value?.intakeDischargePoints || [],\r\n                'typeOfWaterUse',\r\n                'Ջրահեռացում'\r\n              ),\r\n              totalPermists: (value?.permits || []).length,\r\n            },\r\n          }),\r\n          {}\r\n        )\r\n      );\r\n      const allDatas = Object.values(seperetedDataPerBMO).reduce(\r\n        (acc, value) => [\r\n          ...acc,\r\n          ...(value?.dataWaterDischarge\r\n            ? value.dataWaterDischarge.map(el => ({ ...el, dataWaterDischarge: true }))\r\n            : []),\r\n          ...(value?.dataWaterintake\r\n            ? value.dataWaterDischarge.map(el => ({ ...el, dataWaterintake: true }))\r\n            : []),\r\n        ],\r\n        []\r\n      );\r\n      let createdMarzDatas = {};\r\n\r\n      for (let i = 0; i < marz.length; i += 1) {\r\n        createdMarzDatas = {\r\n          ...createdMarzDatas,\r\n          [engMarz[marz[i]?.name]]: allDatas.filter(\r\n            el => el?.marz_Internal_ID === marz[i]?.internal_id\r\n          ),\r\n        };\r\n      }\r\n\r\n      setSepetetedDataPerMarz(\r\n        Object.entries(createdMarzDatas).reduce(\r\n          (acc, [key, value]) => ({\r\n            ...acc,\r\n            [key]: {\r\n              dataWaterDischargeQuanitity: totalQuantit(value.filter(el => el?.dataWaterDischarge)),\r\n              dataWaterintakeQuanitity: totalQuantit(value.filter(el => el?.dataWaterintake)),\r\n              dataResourcesWaterSources: listOfNames(value),\r\n              dataResourcesWaterSourcesLength: listOfNames(value).length,\r\n            },\r\n          }),\r\n          {}\r\n        )\r\n      );\r\n    }\r\n  }, [seperetedDataPerBMO]);\r\n\r\n  const exportData = (data, name) => {\r\n    const jsonString = `data:text/json;chatset=utf-8,${encodeURIComponent(JSON.stringify(data))}`;\r\n    const link = document.createElement('a');\r\n    link.href = jsonString;\r\n    link.download = `${name}.json`;\r\n\r\n    link.click();\r\n  };\r\n\r\n  const disabledDate = current => {\r\n    // Disable dates before 2000 and after 2024\r\n    return (\r\n      current && (current.isBefore(moment('2000-01-01')) || current.isAfter(moment('2024-12-31')))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Spin spinning={loading}>\r\n        <Title>Tim 2 Prestentetion of Data Reserch of cadastre API</Title>\r\n        <DatePicker\r\n          picker='year'\r\n          onChange={e => {\r\n            setYear(moment(e).format('YYYY'));\r\n            setSeperetedDataPerBMO({});\r\n            setGlobaledBmoData({});\r\n            setSepetetedDataPerMarz({});\r\n          }}\r\n          defaultValue={moment(year, 'YYYY')}\r\n          width='200px'\r\n          mb={10}\r\n          disabledDate={disabledDate}\r\n        />\r\n        <Row gutter={[15, 32]}>\r\n          <Col span={24}>\r\n            <Title level={3}>MAP presentation of cadastre Data</Title>\r\n            <Col span={24} border_radius={'32px'} padding='16px 32px' back_color='rgb(229 229 220)'>\r\n              <Title level={5} style={{ color: 'red' }}>\r\n                In Red text in The Map you'll see Total Water Discharge Quanitity per Marz\r\n              </Title>\r\n              <Title level={5} style={{ color: 'green' }}>\r\n                In Grenn text in The Map you'll see Total Water Intake Quanitity per Marz\r\n              </Title>\r\n              <Title level={5} style={{ color: 'black' }}>\r\n                In Black text in The Map you'll see Total Water Sources Quantity per Marz\r\n              </Title>\r\n              <MapContainer\r\n                center={[40.1792, 44.4991]}\r\n                zoom={8}\r\n                style={{ height: '600px', width: '100%' }}\r\n                key='stable-map-key'\r\n              >\r\n                <Suspense>\r\n                  <TileLayer\r\n                    url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                  />\r\n                  <GeoJSON\r\n                    data={geojsonData}\r\n                    style={{\r\n                      color: '#3388ff',\r\n                      weight: 2,\r\n                      fillOpacity: 0.2,\r\n                    }}\r\n                  />\r\n                  <ProvinceLabels data={geojsonData} marzData={sepetetedDataPerMarz} />\r\n                </Suspense>\r\n              </MapContainer>\r\n              <Button\r\n                onClick={() => exportData(sepetetedDataPerMarz, 'marz')}\r\n                margin={'32px 0 0 0'}\r\n              >\r\n                Export Data\r\n              </Button>\r\n            </Col>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Title level={3}>\r\n              Data presnetetion per Marz and BMO <b>please Hover the Charts for Data</b>\r\n            </Title>\r\n            <Col span={24} border_radius={'32px'} padding='16px 32px' back_color='rgb(229 229 220)'>\r\n              <Spin spinning={charLoading}>\r\n                <RangePicker\r\n                  picker='year'\r\n                  disabledDate={disabledDate}\r\n                  defaultValue={[rangeYears[0], rangeYears[rangeYears.length - 1]].map(el =>\r\n                    moment(el, 'YYYY')\r\n                  )}\r\n                  onChange={e => {\r\n                    setRangeYears(\r\n                      Array.from(\r\n                        {\r\n                          length:\r\n                            Number(moment(e[1]).format('YYYY')) -\r\n                            Number(moment(e[0]).format('YYYY')) +\r\n                            1,\r\n                        },\r\n                        (_, i) => Number(moment(e[0]).format('YYYY')) + i\r\n                      )\r\n                    );\r\n                    setChartData({});\r\n                  }}\r\n                  width='200px'\r\n                  mb={10}\r\n                />\r\n                <Row gutter={[32, 32]}>\r\n                  <Col span={24}>\r\n                    <Title level={3}>Chart of BMOs Water Dischard Quantity</Title>\r\n                    <LineChart\r\n                      width={730}\r\n                      height={250}\r\n                      data={Object.entries(chartData).map(([key, value]) => ({\r\n                        name: key,\r\n                        ...value.dataDataWaterDischarge,\r\n                      }))}\r\n                      margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n                    >\r\n                      <CartesianGrid strokeDasharray='3 3' />\r\n                      <XAxis dataKey='name' />\r\n                      <YAxis />\r\n                      <Tooltip />\r\n                      <Legend />\r\n                      {[\r\n                        { name: 'Ախուրյան', color: 'black' },\r\n                        { name: 'Արարատյան', color: 'yellow' },\r\n                        { name: 'Հարավային', color: 'red' },\r\n                        { name: 'Հյուսիսային', color: 'blue' },\r\n                        { name: 'Հրազդան', color: 'pink' },\r\n                        { name: 'Սևան', color: 'orange' },\r\n                      ].map(el => (\r\n                        <Line type='monotone' dataKey={el.name} key={el.name} stroke={el.color} />\r\n                      ))}\r\n                    </LineChart>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Title level={3}>Chart of BMOs Water Intake Quantity</Title>\r\n                    <LineChart\r\n                      width={730}\r\n                      height={250}\r\n                      data={Object.entries(chartData).map(([key, value]) => ({\r\n                        name: key,\r\n                        ...value.dataWaterintakeQuanitity,\r\n                      }))}\r\n                      margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n                    >\r\n                      <CartesianGrid strokeDasharray='3 3' />\r\n                      <XAxis dataKey='name' />\r\n                      <YAxis />\r\n                      <Tooltip />\r\n                      <Legend />\r\n                      {[\r\n                        { name: 'Ախուրյան', color: 'black' },\r\n                        { name: 'Արարատյան', color: 'yellow' },\r\n                        { name: 'Հարավային', color: 'red' },\r\n                        { name: 'Հյուսիսային', color: 'blue' },\r\n                        { name: 'Հրազդան', color: 'pink' },\r\n                        { name: 'Սևան', color: 'orange' },\r\n                      ].map(el => (\r\n                        <Line type='monotone' dataKey={el.name} key={el.name} stroke={el.color} />\r\n                      ))}\r\n                    </LineChart>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Title level={3}>Chart of BMOs Water Permits Quantity</Title>\r\n                    <LineChart\r\n                      width={730}\r\n                      height={250}\r\n                      data={Object.entries(chartData).map(([key, value]) => ({\r\n                        name: key,\r\n                        ...value.permitsQuantity,\r\n                      }))}\r\n                      margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n                    >\r\n                      <CartesianGrid strokeDasharray='3 3' />\r\n                      <XAxis dataKey='name' />\r\n                      <YAxis />\r\n                      <Tooltip />\r\n                      <Legend />\r\n                      {[\r\n                        { name: 'Ախուրյան', color: 'black' },\r\n                        { name: 'Արարատյան', color: 'yellow' },\r\n                        { name: 'Հարավային', color: 'red' },\r\n                        { name: 'Հյուսիսային', color: 'blue' },\r\n                        { name: 'Հրազդան', color: 'pink' },\r\n                        { name: 'Սևան', color: 'orange' },\r\n                      ].map(el => (\r\n                        <Line type='monotone' dataKey={el.name} key={el.name} stroke={el.color} />\r\n                      ))}\r\n                    </LineChart>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Button onClick={() => exportData(chartData, 'chart')} margin={'32px 0 0 0'}>\r\n                      Export Data\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Spin>\r\n            </Col>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Title level={3}>\r\n              Data presnetetion per Marz and BMO <b>please Hover the Charts for Data</b>\r\n            </Title>\r\n            <Col span={24} border_radius={'32px'} padding='16px 32px' back_color='rgb(229 229 220)'>\r\n              <Row gutter={[16, 16]}>\r\n                <Col span={12}>\r\n                  <Title level={4}>Pie represts Marzs and BMOs Water Discharge Quanitity</Title>\r\n                  <ResponsiveContainer width='100%' height={200}>\r\n                    <PieChart width='100%' height={200}>\r\n                      <Pie\r\n                        data={Object.entries(globaledBmoData).map(([key, value]) => ({\r\n                          name: key,\r\n                          value: Math.round(value.dataWaterDischargeQuanitity),\r\n                        }))}\r\n                        dataKey='value'\r\n                        cx='50%'\r\n                        cy='50%'\r\n                        outerRadius={60}\r\n                        fill='#8884d8'\r\n                      />\r\n                      <Tooltip content={<CustomTooltip />} />\r\n                      <Pie\r\n                        data={Object.entries(sepetetedDataPerMarz).map(([key, value]) => ({\r\n                          name: key,\r\n                          value: Math.round(value.dataWaterDischargeQuanitity),\r\n                        }))}\r\n                        dataKey='value'\r\n                        cx='50%'\r\n                        cy='50%'\r\n                        innerRadius={70}\r\n                        outerRadius={90}\r\n                        fill='#82ca9d'\r\n                      />\r\n                    </PieChart>\r\n                  </ResponsiveContainer>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Title level={4}>Pie represts Marzs and BMOs Water Intake Quanitity</Title>\r\n                  <ResponsiveContainer width='100%' height={200}>\r\n                    <PieChart width='100%' height={200}>\r\n                      <Pie\r\n                        data={Object.entries(globaledBmoData).map(([key, value]) => ({\r\n                          name: key,\r\n                          value: Math.round(value.dataWaterintakeQuanitity),\r\n                        }))}\r\n                        dataKey='value'\r\n                        cx='50%'\r\n                        cy='50%'\r\n                        outerRadius={60}\r\n                        fill='#8884d8'\r\n                      />\r\n                      <Tooltip content={<CustomTooltip />} />\r\n                      <Pie\r\n                        data={Object.entries(sepetetedDataPerMarz).map(([key, value]) => ({\r\n                          name: key,\r\n                          value: Math.round(value.dataWaterintakeQuanitity),\r\n                        }))}\r\n                        dataKey='value'\r\n                        cx='50%'\r\n                        cy='50%'\r\n                        innerRadius={70}\r\n                        outerRadius={90}\r\n                        fill='#82ca9d'\r\n                      />\r\n                    </PieChart>\r\n                  </ResponsiveContainer>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Title level={4}>Pie represts Marzs and BMOs Water Sources Quanitity</Title>\r\n                  <ResponsiveContainer width='100%' height={200}>\r\n                    <PieChart width='100%' height={200}>\r\n                      <Pie\r\n                        data={Object.entries(globaledBmoData).map(([key, value]) => ({\r\n                          name: key,\r\n                          value: Math.round(value.dataResourcesWaterSourcesLength),\r\n                        }))}\r\n                        dataKey='value'\r\n                        cx='50%'\r\n                        cy='50%'\r\n                        outerRadius={60}\r\n                        fill='#8884d8'\r\n                      />\r\n                      <Tooltip content={<CustomTooltip continuem={false} />} continuem={false} />\r\n                      <Pie\r\n                        data={Object.entries(sepetetedDataPerMarz).map(([key, value]) => ({\r\n                          name: key,\r\n                          value: Math.round(value.dataResourcesWaterSourcesLength),\r\n                        }))}\r\n                        dataKey='value'\r\n                        cx='50%'\r\n                        cy='50%'\r\n                        innerRadius={70}\r\n                        outerRadius={90}\r\n                        fill='#82ca9d'\r\n                      />\r\n                    </PieChart>\r\n                  </ResponsiveContainer>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Title level={4}>Pie represts BMOs Water Consumption Quanitity</Title>\r\n                  <ResponsiveContainer width='100%' height={200}>\r\n                    <PieChart width='100%' height={200}>\r\n                      <Pie\r\n                        data={Object.entries(globaledBmoData).map(([key, value]) => ({\r\n                          name: key,\r\n                          value: Math.round(value.TotalJrar),\r\n                        }))}\r\n                        dataKey='value'\r\n                        cx='50%'\r\n                        cy='50%'\r\n                        outerRadius={60}\r\n                        fill='#8884d8'\r\n                      />\r\n                      <Tooltip content={<CustomTooltip />} />\r\n                    </PieChart>\r\n                  </ResponsiveContainer>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Title level={4}>Pie represts BMOs removing the water intake Quanitity</Title>\r\n                  <ResponsiveContainer width='100%' height={200}>\r\n                    <PieChart width='100%' height={200}>\r\n                      <Pie\r\n                        data={Object.entries(globaledBmoData).map(([key, value]) => ({\r\n                          name: key,\r\n                          value: Math.round(value.TotalJrarHeracum),\r\n                        }))}\r\n                        dataKey='value'\r\n                        cx='50%'\r\n                        cy='50%'\r\n                        outerRadius={60}\r\n                        fill='#8884d8'\r\n                      />\r\n                      <Tooltip content={<CustomTooltip />} />\r\n                    </PieChart>\r\n                  </ResponsiveContainer>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Title level={4}>Pie represts BMOs permits Quanitity</Title>\r\n                  <ResponsiveContainer width='100%' height={200}>\r\n                    <PieChart width='100%' height={200}>\r\n                      <Pie\r\n                        data={Object.entries(globaledBmoData).map(([key, value]) => ({\r\n                          name: key,\r\n                          value: Math.round(value.totalPermists),\r\n                        }))}\r\n                        dataKey='value'\r\n                        cx='50%'\r\n                        cy='50%'\r\n                        outerRadius={60}\r\n                        fill='#8884d8'\r\n                      />\r\n                      <Tooltip content={<CustomTooltip continuem={false} />} continuem={false} />\r\n                    </PieChart>\r\n                  </ResponsiveContainer>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Title level={4}>All Water Resouces Names</Title>\r\n                  <Paragraph fw={700}>Per BMO -- </Paragraph>\r\n                  {Object.entries(globaledBmoData).length\r\n                    ? Object.entries(globaledBmoData).map(([key, value]) => (\r\n                        <div style={{ marginTop: 5 }} key={key}>\r\n                          <br></br>\r\n                          <b>{key}</b>--\r\n                          {`${Object.entries(value)\r\n                            .filter(([k]) => k === 'dataResourcesWaterSources')\r\n                            .map(([, el]) => el)\r\n                            .join(',')}`}\r\n                        </div>\r\n                      ))\r\n                    : ''}\r\n                  <Paragraph fw={700}>Per Marz --</Paragraph>\r\n                  {Object.entries(sepetetedDataPerMarz).length\r\n                    ? Object.entries(sepetetedDataPerMarz).map(([key, value]) => (\r\n                        <div style={{ marginTop: 5 }} key={key}>\r\n                          <br></br>\r\n                          <b>{key}</b>--\r\n                          {`${Object.entries(value)\r\n                            .filter(([k]) => k === 'dataResourcesWaterSources')\r\n                            .map(([, el]) => el)\r\n                            .join(',')}`}\r\n                        </div>\r\n                      ))\r\n                    : ''}\r\n                </Col>\r\n                <Button onClick={() => exportData(globaledBmoData, 'BMO')} margin={'32px 0 0 0'}>\r\n                  Export Data\r\n                </Button>\r\n              </Row>\r\n            </Col>\r\n          </Col>\r\n        </Row>\r\n      </Spin>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GuestDashboard;\r\n","import client from '../main-client';\r\n\r\nexport const getMarz = data => client().get('/Marz', data);\r\nexport const getBmo = data => client().get('/BMO', data);\r\nexport const getPermits = ({ bmoid, year, ...data }) =>\r\n  client().get(`/main/${bmoid}/${year}`, data);\r\nexport const getIntakeDischargePoints = ({ bmoid, ...data }) =>\r\n  client().get(`/intake-discharge-points/${bmoid}`, data);\r\nexport const getDataWaterintake = ({ bmoid, year, ...data }) =>\r\n  client().get(`/datawaterintake/${bmoid}/${year}`, data);\r\nexport const getDataWaterDischarge = ({ bmoid, year, ...data }) =>\r\n  client().get(`/datawaterdischarge/${bmoid}/${year}`, data);\r\n","import axios from 'axios';\r\n// import Promise from 'bluebird';\r\nimport routes from 'constants/routes';\r\nimport { notification } from 'antd';\r\nimport { getAccessToken, emptyState } from '../configs/local-storage';\r\nimport { API_ROOT } from '../configs/env-vars';\r\n//\r\n// Promise.config({\r\n//   cancellation: true,\r\n// });\r\n\r\n// overwrite native Promise implementation with Bluebird's\r\n// window.Promise = Promise;\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (headers = {}) => {\r\n  const service = axios.create({\r\n    baseURL: API_ROOT, // url of the api\r\n    headers: {\r\n      Authorization: getAccessToken() ? 'Bearer '.concat(getAccessToken()) : '',\r\n      ...headers,\r\n    },\r\n  });\r\n  service.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n      const errorResponse = error.response;\r\n      if (process.env.NODE_ENV === 'production') {\r\n        switch (errorResponse.status) {\r\n          case 404:\r\n            window.location.pathname = routes.notFound.pathname;\r\n            break;\r\n          case 403:\r\n            window.location.pathname = '/not-permitted';\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      if (errorResponse.status === 401) {\r\n        emptyState();\r\n        window.location.href = '/sign-in';\r\n      }\r\n      if (errorResponse) {\r\n        notification.error({\r\n          message: 'Error',\r\n          description:\r\n            errorResponse?.data?.message?.[0]?.messages?.[0]?.message ||\r\n            (typeof errorResponse?.data?.message === 'string' && errorResponse?.data?.message) ||\r\n            'Something went wrong',\r\n          maxCount: 1,\r\n          duration: 0,\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  );\r\n  return service;\r\n};\r\n","import { useState } from 'react';\r\n\r\nconst useApiCall = (callFunc, countFunc, withoutLoading) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [count, setCount] = useState(null);\r\n\r\n  const handleApiCall = (params, callback = () => {}) => {\r\n    handleLoadingChange(true);\r\n    if (callFunc) {\r\n      callFunc(params)\r\n        .then(res => {\r\n          handleLoadingChange();\r\n          setData(res?.data || []);\r\n          callback(res?.data || []);\r\n        })\r\n        .catch(() => {\r\n          handleLoadingChange();\r\n        });\r\n    }\r\n    if (countFunc) {\r\n      countFunc(params)\r\n        .then(res => {\r\n          setCount(res?.data || 0);\r\n        })\r\n        .catch(() => {});\r\n    }\r\n  };\r\n\r\n  const handleLoadingChange = (value = false) => {\r\n    if (!withoutLoading) {\r\n      setLoading(value);\r\n    }\r\n  };\r\n\r\n  const setDefaultValues = () => {\r\n    setData([]);\r\n    setCount(0);\r\n  };\r\n\r\n  return [data, loading, handleApiCall, count, setDefaultValues];\r\n};\r\n\r\nexport default useApiCall;\r\n"],"names":["Title","Typography","totalQuantit","data","reduce","acc","item","totalQuantity","listOfNames","Set","map","el","waterSource","totalKeyCount","key","name","filter","length","engMarz","Արագածոտն","Արարատ","Արմավիր","Գեղարքունիք","Երևան","Լոռի","Կոտայք","Շիրակ","Սյունիք","Տավուշ","CustomTooltip","_ref","_payload$","_payload$$payload","_payload$2","_payload$2$payload","payload","continuem","_jsxs","children","_jsx","className","value","ProvinceLabels","React","_ref2","marzData","useMap","markers","useEffect","features","forEach","feature","center","centroid","lng","lat","geometry","coordinates","marker","L","icon","html","concat","properties","Math","round","dataWaterDischargeQuanitity","dataWaterintakeQuanitity","dataResourcesWaterSourcesLength","addTo","current","push","removeLayer","GuestDashboard","marz","marzCall","useApiCall","getMarz","permitsCall","getPermits","intakeDischargePointsCall","getIntakeDischargePoints","dataWaterintakeCall","getDataWaterintake","dataWaterDischargeCall","getDataWaterDischarge","bmo","bmoCall","getBmo","seperetedDataPerBMO","setSeperetedDataPerBMO","useState","globaledBmoData","setGlobaledBmoData","sepetetedDataPerMarz","setSepetetedDataPerMarz","year","setYear","rangeYears","setRangeYears","chartData","setChartData","charLoading","setCharLoading","loading","setLoading","m","get","_leaflet_id","allDone","permits","dataWaterintake","dataWaterDischarge","Promise","all","yr","ac","bm","bmoid","internal_id","then","converData","flat","_acc$value$yearA","_objectSpread","yearA","basinName","prev","Object","entries","_ref3","permitsQuantity","values","every","catch","e","console","error","_acc$value$yearA2","_ref4","_acc$value$yearA3","_ref5","dataDataWaterDischarge","i","allLoaded","intakeDischargePoints","areAllFileed","keys","val","_ref6","dataResourcesWaterSources","TotalJrar","TotalJrarHeracum","totalPermists","allDatas","createdMarzDatas","_marz$i","_marz$i2","marz_Internal_ID","_ref7","exportData","jsonString","encodeURIComponent","JSON","stringify","link","document","createElement","href","download","click","disabledDate","isBefore","moment","isAfter","Spin","spinning","DatePicker","picker","onChange","format","defaultValue","width","mb","Row","gutter","Col","span","level","border_radius","padding","back_color","style","color","MapContainer","zoom","height","Suspense","TileLayer","url","attribution","GeoJSON","geojsonData","weight","fillOpacity","Button","onClick","margin","RangePicker","Array","from","Number","_","LineChart","_ref8","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","type","stroke","_ref9","_ref10","ResponsiveContainer","PieChart","Pie","_ref11","cx","cy","outerRadius","fill","content","_ref12","innerRadius","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","Paragraph","fw","_ref20","marginTop","_ref21","k","_ref22","join","_ref23","_ref24","_ref25","client","_objectWithoutProperties","_excluded","_excluded2","_excluded3","_excluded4","headers","arguments","undefined","service","axios","create","baseURL","API_ROOT","Authorization","getAccessToken","interceptors","response","use","errorResponse","status","window","location","pathname","routes","notFound","_errorResponse$data","_errorResponse$data$m","_errorResponse$data$m2","_errorResponse$data$m3","_errorResponse$data$m4","_errorResponse$data2","_errorResponse$data3","emptyState","notification","message","description","messages","maxCount","duration","callFunc","countFunc","withoutLoading","setData","count","setCount","handleLoadingChange","params","callback","res","setDefaultValues"],"sourceRoot":""}