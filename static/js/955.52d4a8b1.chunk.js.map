{"version":3,"file":"static/js/955.52d4a8b1.chunk.js","mappings":"+PAOA,MAAMA,EAAiBC,EAAAA,MAAWC,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EACnD,MAAMG,GAAMC,EAAAA,EAAAA,MACNC,EAAUN,EAAAA,OAAa,IAsC7B,OApCAO,EAAAA,EAAAA,YAAU,KACRL,EAAKM,SAASC,SAAQC,IACpB,MAAMC,GAASC,EAAAA,EAAAA,UAASF,IACjBG,EAAKC,GAAOH,EAAOI,SAASC,YAE7BC,EAASC,IAAAA,OAAS,CAACJ,EAAKD,GAAM,CAClCM,KAAMD,IAAAA,QAAU,CACdE,UAAW,iBACXC,KAAK,iEAADC,OACFZ,EAAQa,WAAWC,KAAI,oBAAAF,OAGjB,OAARnB,QAAQ,IAARA,GAAAA,EAAWO,EAAQa,WAAWC,MAAK,iEAAAF,OACkCG,KAAKC,MAC5D,OAARvB,QAAQ,IAARA,OAAQ,EAARA,EAAWO,EAAQa,WAAWC,MAAMG,4BACrC,qGAAAL,OACiEG,KAAKC,MAC7D,OAARvB,QAAQ,IAARA,OAAQ,EAARA,EAAWO,EAAQa,WAAWC,MAAMI,yBACrC,sGAAAN,OACkEG,KAAKC,MAC7D,OAARvB,QAAQ,IAARA,OAAQ,EAARA,EAAWO,EAAQa,WAAWC,MAAMK,iCACrC,0BAEF,QAGLC,MAAM1B,GAETE,EAAQyB,QAAQC,KAAKf,EAAO,IAEvB,KACLX,EAAQyB,QAAQtB,SAAQQ,GAAUb,EAAI6B,YAAYhB,KAClDX,EAAQyB,QAAU,EAAE,IAErB,CAAC7B,EAAMC,EAAUC,IAEb,IAAI,IAuCb,EApCqB8B,IAA+B,IAA9B,qBAAEC,GAAsBD,EAU5C,OATA3B,EAAAA,EAAAA,YAAU,IACD,KACL,MAAM6B,EAAIlB,IAAAA,QAAUmB,IAAI,OACpBD,IAEFA,EAAEE,YAAc,KAClB,GAED,KAEDC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CACX7B,OAAQ,CAAC,QAAS,SAClB8B,KAAM,EACNC,MAAO,CAAEC,OAAQ,QAASC,MAAO,QAASC,UAG1CC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAA,EACPN,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CACRC,IAAI,qDACJC,YAAY,2FAEdX,EAAAA,EAAAA,KAACY,EAAAA,EAAO,CACNjD,KAAMkD,EACNV,MAAO,CACLW,MAAO,UACPC,OAAQ,EACRC,YAAa,OAGjBhB,EAAAA,EAAAA,KAACxC,EAAc,CAACG,KAAMkD,EAAajD,SAAUgC,QAf3C,iBAiBS,C","sources":["components/molecules/dashboard-map.js"],"sourcesContent":["import React, { Suspense, useEffect } from 'react';\r\nimport L from 'leaflet';\r\nimport { MapContainer, TileLayer, GeoJSON, useMap } from 'react-leaflet';\r\nimport { centroid } from 'turf/index';\r\nimport geojsonData from '../../assets/am.json';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nconst ProvinceLabels = React.memo(({ data, marzData }) => {\r\n  const map = useMap();\r\n  const markers = React.useRef([]);\r\n\r\n  useEffect(() => {\r\n    data.features.forEach(feature => {\r\n      const center = centroid(feature);\r\n      const [lng, lat] = center.geometry.coordinates;\r\n\r\n      const marker = L.marker([lat, lng], {\r\n        icon: L.divIcon({\r\n          className: 'province-label',\r\n          html: `<div style=\"font-size:12px; color:blue; white-space: nowrap;\">${\r\n            feature.properties.name\r\n          }</div>\r\n        ${\r\n          marzData?.[feature.properties.name]\r\n            ? `<div style=\"font-size:12px; color:red; white-space: nowrap;\"> ${Math.round(\r\n                marzData?.[feature.properties.name].dataWaterDischargeQuantity\r\n              )} k m³/yr</div>\r\n              <div style=\"font-size:12px; color:green; white-space: nowrap;\"> ${Math.round(\r\n                marzData?.[feature.properties.name].dataWaterIntakeQuantity\r\n              )} k m³/yr</div>\r\n               <div style=\"font-size:12px; color:black; white-space: nowrap;\"> ${Math.round(\r\n                 marzData?.[feature.properties.name].dataResourcesWaterSourcesLength\r\n               )}</div>\r\n              `\r\n            : ''\r\n        }`,\r\n        }),\r\n      }).addTo(map);\r\n\r\n      markers.current.push(marker);\r\n    });\r\n    return () => {\r\n      markers.current.forEach(marker => map.removeLayer(marker));\r\n      markers.current = [];\r\n    };\r\n  }, [data, marzData, map]);\r\n\r\n  return null;\r\n});\r\n\r\nconst DashboardMap = ({ separatedDataPerMarz }) => {\r\n  useEffect(() => {\r\n    return () => {\r\n      const m = L.DomUtil.get('map');\r\n      if (m) {\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        m._leaflet_id = null;\r\n      }\r\n    };\r\n  }, []);\r\n  return (\r\n    <MapContainer\r\n      center={[40.1792, 44.4991]}\r\n      zoom={8}\r\n      style={{ height: '600px', width: '100%' }}\r\n      key='stable-map-key'\r\n    >\r\n      <Suspense>\r\n        <TileLayer\r\n          url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        <GeoJSON\r\n          data={geojsonData}\r\n          style={{\r\n            color: '#3388ff',\r\n            weight: 2,\r\n            fillOpacity: 0.2,\r\n          }}\r\n        />\r\n        <ProvinceLabels data={geojsonData} marzData={separatedDataPerMarz} />\r\n      </Suspense>\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default DashboardMap;\r\n"],"names":["ProvinceLabels","React","_ref","data","marzData","map","useMap","markers","useEffect","features","forEach","feature","center","centroid","lng","lat","geometry","coordinates","marker","L","icon","className","html","concat","properties","name","Math","round","dataWaterDischargeQuantity","dataWaterIntakeQuantity","dataResourcesWaterSourcesLength","addTo","current","push","removeLayer","_ref2","separatedDataPerMarz","m","get","_leaflet_id","_jsx","MapContainer","zoom","style","height","width","children","_jsxs","Suspense","TileLayer","url","attribution","GeoJSON","geojsonData","color","weight","fillOpacity"],"sourceRoot":""}