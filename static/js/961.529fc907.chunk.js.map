{"version":3,"file":"static/js/961.529fc907.chunk.js","mappings":"6VAEaA,EAAUC,IAAQC,EAAAA,EAAAA,WAASC,IAAI,QAASF,GACxCG,EAASH,IAAQC,EAAAA,EAAAA,WAASC,IAAI,OAAQF,GACtCI,EAAaC,IAAA,IAAC,MAAEC,EAAK,KAAEC,GAAeF,EAANL,GAAIQ,EAAAA,EAAAA,GAAAH,EAAAI,GAAA,OAC/CR,EAAAA,EAAAA,WAASC,IAAI,SAADQ,OAAUJ,EAAK,KAAAI,OAAIH,GAAQP,EAAK,EACjCW,EAA2BC,IAAA,IAAC,MAAEN,GAAgBM,EAANZ,GAAIQ,EAAAA,EAAAA,GAAAI,EAAAC,GAAA,OACvDZ,EAAAA,EAAAA,WAASC,IAAI,4BAADQ,OAA6BJ,GAASN,EAAK,EAC5Cc,EAAqBC,IAAA,IAAC,MAAET,EAAK,KAAEC,GAAeQ,EAANf,GAAIQ,EAAAA,EAAAA,GAAAO,EAAAC,GAAA,OACvDf,EAAAA,EAAAA,WAASC,IAAI,oBAADQ,OAAqBJ,EAAK,KAAAI,OAAIH,GAAQP,EAAK,EAC5CiB,EAAwBC,IAAA,IAAC,MAAEZ,EAAK,KAAEC,GAAeW,EAANlB,GAAIQ,EAAAA,EAAAA,GAAAU,EAAAC,GAAA,OAC1DlB,EAAAA,EAAAA,WAASC,IAAI,uBAADQ,OAAwBJ,EAAK,KAAAI,OAAIH,GAAQP,EAAK,C,2GCG5D,mBAAkC,IAAlBoB,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzB,MAAMG,EAAUC,EAAAA,EAAMC,OAAO,CAC3BC,QAASC,EAAAA,SACTR,SAAOS,EAAAA,EAAAA,GAAA,CACLC,eAAeC,EAAAA,EAAAA,kBAAmB,UAAUrB,QAAOqB,EAAAA,EAAAA,mBAAoB,IACpEX,KAkCP,OA/BAI,EAAQQ,aAAaC,SAASC,KAC5BD,GAAYA,IACZE,IACE,MAAMC,EAAgBD,EAAMF,SAE1B,GACO,MADCG,EAAcC,OAElBC,OAAOC,SAASC,SAAW,iBAUb,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAJU,MAAzBX,EAAcC,UAChBW,EAAAA,EAAAA,cACAV,OAAOC,SAASU,KAAO,YAErBb,IACFc,EAAAA,EAAaf,MAAM,CACjBgB,QAAS,QACTC,aACe,OAAbhB,QAAa,IAAbA,GAAmB,QAANK,EAAbL,EAAepC,YAAI,IAAAyC,GAAS,QAATC,EAAnBD,EAAqBU,eAAO,IAAAT,GAAK,QAALC,EAA5BD,EAA+B,UAAE,IAAAC,GAAU,QAAVC,EAAjCD,EAAmCU,gBAAQ,IAAAT,GAAK,QAALC,EAA3CD,EAA8C,UAAE,IAAAC,OAAnC,EAAbA,EAAkDM,UACT,kBAApB,OAAbf,QAAa,IAAbA,GAAmB,QAANU,EAAbV,EAAepC,YAAI,IAAA8C,OAAN,EAAbA,EAAqBK,WAAqC,OAAbf,QAAa,IAAbA,GAAmB,QAANW,EAAbX,EAAepC,YAAI,IAAA+C,OAAN,EAAbA,EAAqBI,UAC1E,uBACFG,SAAU,EACVC,SAAU,IAGd,MAAMpB,CAAK,IAGRX,CACR,C","sources":["services/apis/marz.js","services/main-client.js"],"sourcesContent":["import client from '../main-client';\r\n\r\nexport const getMarz = data => client().get('/Marz', data);\r\nexport const getBmo = data => client().get('/BMO', data);\r\nexport const getPermits = ({ bmoid, year, ...data }) =>\r\n  client().get(`/main/${bmoid}/${year}`, data);\r\nexport const getIntakeDischargePoints = ({ bmoid, ...data }) =>\r\n  client().get(`/intake-discharge-points/${bmoid}`, data);\r\nexport const getDataWaterIntake = ({ bmoid, year, ...data }) =>\r\n  client().get(`/datawaterintake/${bmoid}/${year}`, data);\r\nexport const getDataWaterDischarge = ({ bmoid, year, ...data }) =>\r\n  client().get(`/datawaterdischarge/${bmoid}/${year}`, data);\r\n","import axios from 'axios';\r\n// import Promise from 'bluebird';\r\nimport { notification } from 'antd';\r\nimport { getAccessToken, emptyState } from '../configs/local-storage';\r\nimport { API_ROOT } from '../configs/env-vars';\r\n//\r\n// Promise.config({\r\n//   cancellation: true,\r\n// });\r\n\r\n// overwrite native Promise implementation with Bluebird's\r\n// window.Promise = Promise;\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (headers = {}) => {\r\n  const service = axios.create({\r\n    baseURL: API_ROOT, // url of the api\r\n    headers: {\r\n      Authorization: getAccessToken() ? 'Bearer '.concat(getAccessToken()) : '',\r\n      ...headers,\r\n    },\r\n  });\r\n  service.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n      const errorResponse = error.response;\r\n      if (process.env.NODE_ENV === 'production') {\r\n        switch (errorResponse.status) {\r\n          case 403:\r\n            window.location.pathname = '/not-permitted';\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      if (errorResponse.status === 401) {\r\n        emptyState();\r\n        window.location.href = '/sign-in';\r\n      }\r\n      if (errorResponse) {\r\n        notification.error({\r\n          message: 'Error',\r\n          description:\r\n            errorResponse?.data?.message?.[0]?.messages?.[0]?.message ||\r\n            (typeof errorResponse?.data?.message === 'string' && errorResponse?.data?.message) ||\r\n            'Something went wrong',\r\n          maxCount: 1,\r\n          duration: 0,\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  );\r\n  return service;\r\n};\r\n"],"names":["getMarz","data","client","get","getBmo","getPermits","_ref","bmoid","year","_objectWithoutProperties","_excluded","concat","getIntakeDischargePoints","_ref2","_excluded2","getDataWaterIntake","_ref3","_excluded3","getDataWaterDischarge","_ref4","_excluded4","headers","arguments","length","undefined","service","axios","create","baseURL","API_ROOT","_objectSpread","Authorization","getAccessToken","interceptors","response","use","error","errorResponse","status","window","location","pathname","_errorResponse$data","_errorResponse$data$m","_errorResponse$data$m2","_errorResponse$data$m3","_errorResponse$data$m4","_errorResponse$data2","_errorResponse$data3","emptyState","href","notification","message","description","messages","maxCount","duration"],"sourceRoot":""}